/* This file was initially auto-generated by https://github.com/pmndrs/gltfjsx and then adapted manually */

import * as THREE from 'three';
import { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export function Model(props) {
	const ref = useRef();
	const { nodes, materials } = useGLTF('/drone.glb');
	// useFrame((state, delta) => (ref.current.rotation.x += 0.01));
	useFrame((state) => {
		const t = state.clock.getElapsedTime();
		ref.current.rotation.x = -Math.PI / 9 + Math.cos(t / 4) / 8;
		ref.current.rotation.y = Math.sin(t / 4) / 8;
		ref.current.rotation.z = (1 + Math.sin(t / 1.5)) / 30;
		ref.current.position.y = (1 + Math.sin(t / 1.5)) / 10;
	});
	return (
		<group ref={ref} {...props} dispose={null}>
			<group rotation={[-Math.PI / 3, 6, 9]} scale={0.03}>
				<group rotation={[Math.PI / 2, 0, 0]}>
					<group position={[0, 63.8, 0.37]} rotation={[0, -Math.PI / 2, 0]}>
						<mesh
							geometry={nodes['Box001_Material_#4_0'].geometry}
							material={materials.Material_4}
						/>
					</group>
					<group position={[0, 63.8, 0.37]} rotation={[0, -Math.PI / 2, 0]}>
						<mesh
							geometry={nodes['Object002_Material_#5_0'].geometry}
							material={materials.Material_5}
						/>
					</group>
				</group>
			</group>
		</group>
	);
}
useGLTF.preload('/drone.glb');
